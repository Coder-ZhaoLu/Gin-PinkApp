// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.20.1
// source: user_reco.proto

package user_reco

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CategoryId int32  `protobuf:"varint,2,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	ArticleNum int32  `protobuf:"varint,3,opt,name=article_num,json=articleNum,proto3" json:"article_num,omitempty"`
	TimeStamp  int64  `protobuf:"varint,4,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_reco_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_user_reco_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_user_reco_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *User) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *User) GetArticleNum() int32 {
	if x != nil {
		return x.ArticleNum
	}
	return 0
}

func (x *User) GetTimeStamp() int64 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

// int32 ---> int64 post_id
type Article struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId     int64 `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	ArticleNum int32 `protobuf:"varint,2,opt,name=article_num,json=articleNum,proto3" json:"article_num,omitempty"`
}

func (x *Article) Reset() {
	*x = Article{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_reco_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Article) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Article) ProtoMessage() {}

func (x *Article) ProtoReflect() protoreflect.Message {
	mi := &file_user_reco_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Article.ProtoReflect.Descriptor instead.
func (*Article) Descriptor() ([]byte, []int) {
	return file_user_reco_proto_rawDescGZIP(), []int{1}
}

func (x *Article) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *Article) GetArticleNum() int32 {
	if x != nil {
		return x.ArticleNum
	}
	return 0
}

type Param2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Click   string `protobuf:"bytes,1,opt,name=click,proto3" json:"click,omitempty"`
	Collect string `protobuf:"bytes,2,opt,name=collect,proto3" json:"collect,omitempty"`
	Share   string `protobuf:"bytes,3,opt,name=share,proto3" json:"share,omitempty"`
	Read    string `protobuf:"bytes,4,opt,name=read,proto3" json:"read,omitempty"`
}

func (x *Param2) Reset() {
	*x = Param2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_reco_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Param2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Param2) ProtoMessage() {}

func (x *Param2) ProtoReflect() protoreflect.Message {
	mi := &file_user_reco_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Param2.ProtoReflect.Descriptor instead.
func (*Param2) Descriptor() ([]byte, []int) {
	return file_user_reco_proto_rawDescGZIP(), []int{2}
}

func (x *Param2) GetClick() string {
	if x != nil {
		return x.Click
	}
	return ""
}

func (x *Param2) GetCollect() string {
	if x != nil {
		return x.Collect
	}
	return ""
}

func (x *Param2) GetShare() string {
	if x != nil {
		return x.Share
	}
	return ""
}

func (x *Param2) GetRead() string {
	if x != nil {
		return x.Read
	}
	return ""
}

type Param1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId int64   `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Params *Param2 `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *Param1) Reset() {
	*x = Param1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_reco_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Param1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Param1) ProtoMessage() {}

func (x *Param1) ProtoReflect() protoreflect.Message {
	mi := &file_user_reco_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Param1.ProtoReflect.Descriptor instead.
func (*Param1) Descriptor() ([]byte, []int) {
	return file_user_reco_proto_rawDescGZIP(), []int{3}
}

func (x *Param1) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *Param1) GetParams() *Param2 {
	if x != nil {
		return x.Params
	}
	return nil
}

type Track struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exposure   string    `protobuf:"bytes,1,opt,name=exposure,proto3" json:"exposure,omitempty"`
	Recommends []*Param1 `protobuf:"bytes,2,rep,name=recommends,proto3" json:"recommends,omitempty"`
	TimeStamp  int64     `protobuf:"varint,3,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
}

func (x *Track) Reset() {
	*x = Track{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_reco_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Track) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Track) ProtoMessage() {}

func (x *Track) ProtoReflect() protoreflect.Message {
	mi := &file_user_reco_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Track.ProtoReflect.Descriptor instead.
func (*Track) Descriptor() ([]byte, []int) {
	return file_user_reco_proto_rawDescGZIP(), []int{4}
}

func (x *Track) GetExposure() string {
	if x != nil {
		return x.Exposure
	}
	return ""
}

func (x *Track) GetRecommends() []*Param1 {
	if x != nil {
		return x.Recommends
	}
	return nil
}

func (x *Track) GetTimeStamp() int64 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

type Similar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId []int64 `protobuf:"varint,1,rep,packed,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (x *Similar) Reset() {
	*x = Similar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_reco_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Similar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Similar) ProtoMessage() {}

func (x *Similar) ProtoReflect() protoreflect.Message {
	mi := &file_user_reco_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Similar.ProtoReflect.Descriptor instead.
func (*Similar) Descriptor() ([]byte, []int) {
	return file_user_reco_proto_rawDescGZIP(), []int{5}
}

func (x *Similar) GetPostId() []int64 {
	if x != nil {
		return x.PostId
	}
	return nil
}

var File_user_reco_proto protoreflect.FileDescriptor

var file_user_reco_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x80, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x6d, 0x70, 0x22, 0x43, 0x0a, 0x07, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x62, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x61,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x61, 0x64, 0x22, 0x42, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x31, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x32, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x22, 0x6b, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78,
	0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78,
	0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x12, 0x27, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x31, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x22,
	0x0a, 0x07, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74,
	0x49, 0x64, 0x32, 0x5d, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x06, 0x2e, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x22, 0x00, 0x12, 0x29, 0x0a, 0x11, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x08, 0x2e, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x1a, 0x08, 0x2e, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x22,
	0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_reco_proto_rawDescOnce sync.Once
	file_user_reco_proto_rawDescData = file_user_reco_proto_rawDesc
)

func file_user_reco_proto_rawDescGZIP() []byte {
	file_user_reco_proto_rawDescOnce.Do(func() {
		file_user_reco_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_reco_proto_rawDescData)
	})
	return file_user_reco_proto_rawDescData
}

var file_user_reco_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_user_reco_proto_goTypes = []interface{}{
	(*User)(nil),    // 0: User
	(*Article)(nil), // 1: Article
	(*Param2)(nil),  // 2: param2
	(*Param1)(nil),  // 3: param1
	(*Track)(nil),   // 4: Track
	(*Similar)(nil), // 5: Similar
}
var file_user_reco_proto_depIdxs = []int32{
	2, // 0: param1.params:type_name -> param2
	3, // 1: Track.recommends:type_name -> param1
	0, // 2: UserRecommend.user_recommend:input_type -> User
	1, // 3: UserRecommend.article_recommend:input_type -> Article
	4, // 4: UserRecommend.user_recommend:output_type -> Track
	5, // 5: UserRecommend.article_recommend:output_type -> Similar
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_user_reco_proto_init() }
func file_user_reco_proto_init() {
	if File_user_reco_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_reco_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_reco_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Article); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_reco_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Param2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_reco_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Param1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_reco_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Track); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_reco_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Similar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_reco_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_reco_proto_goTypes,
		DependencyIndexes: file_user_reco_proto_depIdxs,
		MessageInfos:      file_user_reco_proto_msgTypes,
	}.Build()
	File_user_reco_proto = out.File
	file_user_reco_proto_rawDesc = nil
	file_user_reco_proto_goTypes = nil
	file_user_reco_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserRecommendClient is the client API for UserRecommend service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserRecommendClient interface {
	// feed recommend
	UserRecommend(ctx context.Context, in *User, opts ...grpc.CallOption) (*Track, error)
	ArticleRecommend(ctx context.Context, in *Article, opts ...grpc.CallOption) (*Similar, error)
}

type userRecommendClient struct {
	cc grpc.ClientConnInterface
}

func NewUserRecommendClient(cc grpc.ClientConnInterface) UserRecommendClient {
	return &userRecommendClient{cc}
}

func (c *userRecommendClient) UserRecommend(ctx context.Context, in *User, opts ...grpc.CallOption) (*Track, error) {
	out := new(Track)
	err := c.cc.Invoke(ctx, "/UserRecommend/user_recommend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userRecommendClient) ArticleRecommend(ctx context.Context, in *Article, opts ...grpc.CallOption) (*Similar, error) {
	out := new(Similar)
	err := c.cc.Invoke(ctx, "/UserRecommend/article_recommend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserRecommendServer is the server API for UserRecommend service.
type UserRecommendServer interface {
	// feed recommend
	UserRecommend(context.Context, *User) (*Track, error)
	ArticleRecommend(context.Context, *Article) (*Similar, error)
}

// UnimplementedUserRecommendServer can be embedded to have forward compatible implementations.
type UnimplementedUserRecommendServer struct {
}

func (*UnimplementedUserRecommendServer) UserRecommend(context.Context, *User) (*Track, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRecommend not implemented")
}
func (*UnimplementedUserRecommendServer) ArticleRecommend(context.Context, *Article) (*Similar, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArticleRecommend not implemented")
}

func RegisterUserRecommendServer(s *grpc.Server, srv UserRecommendServer) {
	s.RegisterService(&_UserRecommend_serviceDesc, srv)
}

func _UserRecommend_UserRecommend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRecommendServer).UserRecommend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UserRecommend/UserRecommend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRecommendServer).UserRecommend(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserRecommend_ArticleRecommend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Article)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRecommendServer).ArticleRecommend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UserRecommend/ArticleRecommend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRecommendServer).ArticleRecommend(ctx, req.(*Article))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserRecommend_serviceDesc = grpc.ServiceDesc{
	ServiceName: "UserRecommend",
	HandlerType: (*UserRecommendServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "user_recommend",
			Handler:    _UserRecommend_UserRecommend_Handler,
		},
		{
			MethodName: "article_recommend",
			Handler:    _UserRecommend_ArticleRecommend_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user_reco.proto",
}
